#include <string>
#include <vector>
#include <map>

using namespace std;

int dx[]={0,1,1,1,0,-1,-1,-1};
int dy[]={-1,-1,0,1,1,1,0,-1};

int solution(vector<int> arrows) {
    map< pair<int, int>, bool > Node_Visit;
    map< pair< pair<int, int>, pair<int, int> >, bool > Edge_Visit;
    
    int answer = 0;
    int y = 0;
    int x = 0;
    
    Node_Visit[{y,x}] = true;
    for(int i=0; i<arrows.size(); i++){
        int dir = arrows[i];
        for(int j=0; j<2; j++){
            int ny = y + dy[dir];
            int nx = x + dx[dir];
            
            if(Node_Visit[{ny, nx}]==true && Edge_Visit[{ {y,x} , {ny, nx} }]==false){
                Edge_Visit[{ {y,x}, {ny, nx} }] = true;
                Edge_Visit[{ {ny, nx}, {y, x} }] = true;
                answer++;
                y = ny;
                x = nx;
                continue;
            }
            
            Node_Visit[{ny, nx}] = true;
            Edge_Visit[{ {y,x}, {ny, nx}}] = true;
            Edge_Visit[{ {ny, nx}, {y,x}}] = true;
            y = ny;
            x = nx;
        }
        
    }
    return answer;
}
